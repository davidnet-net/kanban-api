services:
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./volumes/db_data:/var/lib/mysql
      - ./mysql_init.sh:/docker-entrypoint-initdb.d/mysql_init.sh
    networks:
      - test-network

  api:
    build: api
    environment:
      DA_ISPROD: ${ISPROD}
      DA_JWT_SECRET: ${JWT_SECRET}
      DA_DB_USER: ${MYSQL_USER}
      DA_DB_PASS: ${MYSQL_PASSWORD}
      DA_DB_NAME: ${MYSQL_DATABASE}
      DA_DB_HOST: db
      DA_LOG_DIR: ${LOG_DIR}
      DA_KEEP_LOG_DAYS: ${KEEP_LOG_DAYS}
      DA_LOG_TO_TERMINAL: ${LOG_TO_TERMINAL}
      DA_EMAIL: ${EMAIL}
      DA_EMAIL_PASSWORD: ${EMAIL_PASSWORD}
    ports:
      - "1001:1001"
    volumes:
      - ./volumes/logs:/app/logs
    dns:
      - 192.168.1.141
      - 1.1.1.1
    depends_on:
      - db
    networks:
      - test-network
    healthcheck:
      test: [
        "CMD-SHELL",
        "curl -v -f http://localhost:1001/health/docker || exit 1",
      ]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - "3001:8080"
    networks:
      - auth-network
    depends_on:
      - db

volumes:
  db_data:
  logs:

networks:
  test-network:
    driver: bridge
